PRODUCT_NAME = opus;

CLANG_WARN_BOOL_CONVERSION = YES;
CLANG_WARN_ENUM_CONVERSION = YES;
CLANG_WARN_INT_CONVERSION = YES;
GCC_WARN_64_TO_32_BIT_CONVERSION = NO;
COMBINE_HIDPI_IMAGES = NO;
ENABLE_STRICT_OBJC_MSGSEND = YES;
HEADER_SEARCH_PATHS = Source/third_party/opus/src/include Source/third_party/opus/src/celt Source/third_party/opus/src/silk Source/third_party/opus/src/silk/float Source/third_party/opus/src;
INSTALL_PATH = /usr/local/lib;
PUBLIC_HEADERS_FOLDER_PATH = /usr/local/include/libwebrtc;
USE_HEADERMAP = NO;
WARNING_CFLAGS = -Wno-incompatible-pointer-types
GCC_PREPROCESSOR_DEFINITIONS = VAR_ARRAYS OPUS_BUILD OPUS_EXPORT= HAVE_LRINT HAVE_LRINTF OPUS_X86_MAY_HAVE_SSE2 $(inherited);
GCC_PREPROCESSOR_DEFINITIONS[arch=arm64*] = $(inherited) OPUS_ARM_PRESUME_AARCH64_NEON_INTR;
GCC_PREPROCESSOR_DEFINITIONS[arch=x86_64] = $(inherited) $(SSE4_FLAG);

EXCLUDED_SOURCE_FILE_NAMES[sdk=iphone*] = *_sse.c *_sse2.c;
EXCLUDED_SOURCE_FILE_NAMES[sdk=macosx*] = $(EXCLUDED_SOURCE_FILE_NAMES_macosx_$(TARGET_MAC_OS_X_VERSION_MAJOR));

// El Capitan and iossimulator can't use SSE4 intrinsics, but Sierra and newer can.
EXCLUDED_SOURCE_FILE_NAMES_macosx_101100 = NSQ_sse.c VAD_sse.c VQ_WMat_EC_sse.c NSQ_del_dec_sse.c;
SSE4_FLAG[sdk=macosx*] = $(SSE4_FLAG_macosx_$(TARGET_MAC_OS_X_VERSION_MAJOR));
SSE4_FLAG_macosx_101200 = OPUS_X86_MAY_HAVE_SSE4_1;
SSE4_FLAG_macosx_101300 = OPUS_X86_MAY_HAVE_SSE4_1;
SSE4_FLAG_macosx_101400 = OPUS_X86_MAY_HAVE_SSE4_1;
