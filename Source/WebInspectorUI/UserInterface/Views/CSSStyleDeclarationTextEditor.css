/*
 * Copyright (C) 2013 Apple Inc. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

.css-style-text-editor {
    background-color: white;
    padding: 2px 0 1px;
}

.css-style-text-editor > .CodeMirror {
    height: auto;
}

.css-style-text-editor > .CodeMirror-scroll {
    overflow: hidden;
}

.css-style-text-editor > .CodeMirror .CodeMirror-placeholder {
    text-indent: 0;
}

.css-style-text-editor > .CodeMirror pre {
    /* Compensate for the checkboxes so properties line up with readonly styles that do not have checkboxes. */
    padding: 0 5px 0 25px;
    text-indent: -21px;
}

.css-style-text-editor > .CodeMirror pre * {
    text-indent: 0;
}

.css-style-text-editor.read-only,
.css-style-text-editor.read-only > .CodeMirror {
    background-color: transparent;
}

.css-style-text-editor.read-only > .CodeMirror pre {
    text-indent: 0;
}

.css-style-text-editor.read-only > .CodeMirror .CodeMirror-cursor {
    display: none;
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines pre > span span:not(.css-style-declaration-property, .CodeMirror-widget, .cm-comment, .cm-tab),
.css-style-text-editor > .CodeMirror .CodeMirror-lines .css-style-declaration-property:matches(.disabled, .invalid, .other-vendor, .not-inherited, .overridden) {
    text-decoration: line-through;
    -webkit-text-stroke-width: 0.000000000000001px; /* A hack to get a different line-through color. */
    -webkit-text-stroke-color: hsla(0, 0%, 0%, 0.6);
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines pre > span span:not(.css-style-declaration-property, .CodeMirror-widget, .cm-comment, .cm-tab),
.css-style-text-editor > .CodeMirror .CodeMirror-lines .css-style-declaration-property.invalid {
    -webkit-text-stroke-color: hsla(0, 100%, 50%, 0.6);
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines .invalid-warning-marker {
    position: relative;
    top: 1px; 
    width: 9px;
    height: 9px;
    margin: 0 2px 0 0;
    padding: 0;
    border: none;
    background-color: transparent;
    background-image: url(../Images/Warning.svg);
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines .invalid-warning-marker.clickable:hover {
    filter: brightness(0.9);
}

.computed .css-style-text-editor > .CodeMirror .CodeMirror-lines .css-style-declaration-property.implicit,
.css-style-text-editor > .CodeMirror .CodeMirror-lines .css-style-declaration-property.not-inherited {
    opacity: 0.5;
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines .editing-line .css-style-declaration-property:matches(.disabled, .other-vendor, .not-inherited, .overridden) {
    -webkit-text-stroke-color: hsla(0, 0%, 0%, 0.3);
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines .editing-line span:not(.css-style-declaration-property, .CodeMirror-widget, .cm-comment, .cm-tab),
.css-style-text-editor > .CodeMirror .CodeMirror-lines .editing-line .css-style-declaration-property.invalid {
    text-decoration: none;
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines input[type=checkbox] {
    width: 10px;
    height: 10px;
    vertical-align: top;
    margin: 0 8px 0 3px;
    visibility: hidden;
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines .checkbox-placeholder {
    display: inline-block;
    width: 21px;
}

.css-style-text-editor > .CodeMirror .CodeMirror-lines input[type=checkbox]:not(:checked),
.css-style-text-editor > .CodeMirror.CodeMirror-focused .CodeMirror-lines input[type=checkbox],
.css-style-text-editor:hover > .CodeMirror .CodeMirror-lines input[type=checkbox] {
    visibility: visible;
}

.css-style-text-editor > .CodeMirror .cm-link {
    /* Style url(...) links as if they are strings. */
    color: var(--syntax-highlight-string-color);
    text-decoration: inherit;
    cursor: inherit;
}
