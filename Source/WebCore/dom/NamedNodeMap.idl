/*
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 * Copyright (C) 2007, 2009 Apple Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    ExportToWrappedFunction,
    GenerateIsReachable=ImplElementRoot,
    ImplementationLacksVTable,
] interface NamedNodeMap {
    readonly attribute unsigned long length;

#if !(defined(LANGUAGE_GOBJECT) && LANGUAGE_GOBJECT)
    getter Attr? getNamedItem(DOMString name);
    [RaisesException] Attr? setNamedItem(Attr attr);
    [RaisesException] Attr removeNamedItem(DOMString name);
    getter Attr? item(unsigned long index);
    Attr? getNamedItemNS(DOMString? namespaceURI, DOMString localName);
    [RaisesException, ImplementedAs=setNamedItem] Attr? setNamedItemNS(Attr attr);
    [RaisesException] Attr removeNamedItemNS(DOMString? namespaceURI, DOMString localName);
#else
    getter Node? getNamedItem(DOMString name);
    [RaisesException] Node? setNamedItem(Node node);
    [RaisesException] Node removeNamedItem(DOMString name);
    getter Node? item(unsigned long index);
    Node? getNamedItemNS(DOMString? namespaceURI, DOMString localName);
    [RaisesException, ImplementedAs=setNamedItem] Node? setNamedItemNS(Node node);
    [RaisesException] Node removeNamedItemNS(DOMString? namespaceURI, DOMString localName);
#endif
};
