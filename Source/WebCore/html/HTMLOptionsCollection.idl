/*
 * Copyright (C) 2006, 2007 Apple Inc. All rights reserved.
 * Copyright (C) 2006 Samuel Weinig <sam.weinig@gmail.com>
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Library General Public
 * License as published by the Free Software Foundation; either
 * version 2 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Library General Public License for more details.
 *
 * You should have received a copy of the GNU Library General Public License
 * along with this library; see the file COPYING.LIB.  If not, write to
 * the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 * Boston, MA 02110-1301, USA.
 */

[
    CustomIndexedSetter,
    ExportToWrappedFunction,
    GenerateIsReachable=ImplOwnerNodeRoot,
    JSGenerateToNativeObject,
] interface HTMLOptionsCollection : HTMLCollection {
    attribute long selectedIndex;
    [CustomSetter, SetterRaisesException] attribute unsigned long length;

#if defined(LANGUAGE_GOBJECT) && LANGUAGE_GOBJECT
    getter Node namedItem(DOMString name);
#else
    getter HTMLOptionElement? item(unsigned long index);
    getter HTMLOptionElement? namedItem(DOMString name);
#endif

#if !(defined(LANGUAGE_GOBJECT) && LANGUAGE_GOBJECT)
    // FIXME: Should be:
    // void add((HTMLOptionElement or HTMLOptGroupElement) element, optional (HTMLElement or long)? before = null);
    [RaisesException] void add(HTMLElement element, optional HTMLElement? before = null);
    [RaisesException] void add(HTMLElement element, long index);
#else
    [RaisesException] void add(HTMLOptionElement option, unsigned long index);
#endif

    void remove(long index);
#if !(defined(LANGUAGE_GOBJECT) && LANGUAGE_GOBJECT)
    // FIXME: This overload is not in the specification and has been dropped in Blink.
    void remove(HTMLOptionElement option);
#endif
};
