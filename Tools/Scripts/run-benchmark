#!/usr/bin/env python

import argparse
import logging
import sys

from webkitpy.benchmark_runner.benchmark_runner import BenchmarkRunner


_log = logging.getLogger()
_log.setLevel(logging.INFO)
ch = logging.StreamHandler()
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
ch.setFormatter(formatter)
_log.addHandler(ch)


def main():
    parser = argparse.ArgumentParser(description='Automate the browser based performance benchmarks')
    parser.add_argument('--output-file', dest='output', default=None)
    parser.add_argument('--build-directory', dest='buildDir', required=True)
    parser.add_argument('--plan', dest='plan', required=True)
    parser.add_argument('--platform', dest='platform', default='osx', choices=['osx', 'ios', 'windows'], required=True)
    # FIXME: Should we add chrome as an option? Well, chrome uses webkit in iOS.
    parser.add_argument('--browser', dest='browser', default='safari', choices=['safari', 'chrome'], required=True)
    parser.add_argument('--debug', action='store_true')
    args = parser.parse_args()
    
    if args.debug:
        _log.setLevel(logging.DEBUG)
    _log.debug('Initializing program with following parameters')
    _log.debug('\toutput file name\t: %s' % args.output)
    _log.debug('\tbuild directory\t: %s' % args.buildDir)
    _log.debug('\tplan name\t: %s', args.plan)
    runner = BenchmarkRunner(args.plan, args.buildDir, args.output, args.platform, args.browser)
    return runner.execute()

if __name__ == '__main__':
    sys.exit(main())
